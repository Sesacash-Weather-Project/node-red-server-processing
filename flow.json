[{"id":"ded39865.f61418","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"9d6a9163.f0463","type":"inject","z":"ded39865.f61418","name":"Transfer injector","topic":"","payload":"{\"unix_time\":1.2,\"to\":1.2,\"quantity\":1.3,\"memo\":1.4}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":220,"wires":[[]]},{"id":"cc1a25e6.e0af08","type":"change","z":"ded39865.f61418","name":"Set flow.boot to 0","rules":[{"t":"set","p":"boot","pt":"flow","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":300,"wires":[[]]},{"id":"7ad7ad97.0c6d44","type":"inject","z":"ded39865.f61418","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":400,"wires":[["6f04c34a.ecdb7c"]]},{"id":"bf12c0d0.303d5","type":"ttn uplink","z":"ded39865.f61418","name":"Test ","app":"19057ef0.4bc851","dev_id":"","field":"","x":70,"y":520,"wires":[["c7709154.22811","9aa76611.8df118"]]},{"id":"e6802898.93caa8","type":"switch","z":"ded39865.f61418","name":"Check flow.boot","property":"boot","propertyType":"flow","rules":[{"t":"null"},{"t":"lt","v":"payload.boot","vt":"msg"},{"t":"eq","v":"payload.boot","vt":"msg"}],"checkall":"true","repair":false,"outputs":3,"x":540,"y":260,"wires":[[],[],[]]},{"id":"dee9d384.623af","type":"change","z":"ded39865.f61418","name":"Rename fields","rules":[{"t":"set","p":"payload.pressure_hpa","pt":"msg","to":"payload.p","tot":"msg"},{"t":"set","p":"payload.relHumidity","pt":"msg","to":"payload.rh","tot":"msg"},{"t":"set","p":"payload.dewPoint_c","pt":"msg","to":"payload.tDewC","tot":"msg"},{"t":"set","p":"payload.temperature_c","pt":"msg","to":"payload.tempC","tot":"msg"},{"t":"delete","p":"payload.boot","pt":"msg"},{"t":"delete","p":"payload.error","pt":"msg"},{"t":"delete","p":"payload.lux","pt":"msg"},{"t":"delete","p":"payload.rh","pt":"msg"},{"t":"delete","p":"payload.tDewC","pt":"msg"},{"t":"delete","p":"payload.tempC","pt":"msg"},{"t":"delete","p":"payload.vBat","pt":"msg"},{"t":"delete","p":"payload.p","pt":"msg"},{"t":"set","p":"payload.wind_mph","pt":"msg","to":"0.0","tot":"num"},{"t":"set","p":"payload.wind_degrees","pt":"msg","to":"0.0","tot":"num"},{"t":"delete","p":"payload.irradiance","pt":"msg"},{"t":"delete","p":"payload.vBus","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":700,"wires":[["74ab1c8f.169154","333143b0.fe243c"]]},{"id":"d2c0baf4.ad2838","type":"change","z":"ded39865.f61418","name":"Add wind and unix time","rules":[{"t":"set","p":"payload.wind_mph","pt":"msg","to":"0.0","tot":"num"},{"t":"set","p":"payload.wind_degrees","pt":"msg","to":"0.0","tot":"num"},{"t":"set","p":"payload.unix_time","pt":"msg","to":"$floor($millis()/1000)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":660,"wires":[["dee9d384.623af"]]},{"id":"58e656d8.72aae8","type":"inject","z":"ded39865.f61418","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":300,"wires":[["cc1a25e6.e0af08"]]},{"id":"7ae0756f.ca629c","type":"change","z":"ded39865.f61418","name":"","rules":[{"t":"set","p":"boot","pt":"flow","to":"payload.boot","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":550,"y":300,"wires":[[]]},{"id":"6f04c34a.ecdb7c","type":"telos-create","z":"ded39865.f61418","name":"m1iopsgqicb3","blockchain":"mainnet","chainid":"4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11","endpoint":"https://telos.caleos.io","customendpoint":"","privkey":"","inputtype":"action","x":350,"y":400,"wires":[]},{"id":"82199e12.48bae","type":"telos-msig","z":"ded39865.f61418","name":"m1iopsgqicb3","blockchain":"mainnet","chainid":"4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11","endpoint":"https://telos.caleos.io","customendpoint":"","privkey":"","inputtype":"action","x":330,"y":540,"wires":[]},{"id":"74ab1c8f.169154","type":"telos-push","z":"ded39865.f61418","name":"m1iopsgqicb3","blockchain":"mainnet","chainid":"4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11","endpoint":"https://telos.caleos.io","customendpoint":"","privkey":"","inputtype":"action","x":580,"y":700,"wires":[]},{"id":"b660e60d.f93668","type":"inject","z":"ded39865.f61418","name":"Sim uplink","topic":"","payload":"{\"boot\":80,\"error\":\"none\",\"lux\":634,\"p\":989.7999877929688,\"rh\":51.953125,\"tDewC\":14.388062629755353,\"tempC\":24.93359375,\"vBat\":4.150146484375}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":80,"y":700,"wires":[["d8af933a.47305"]]},{"id":"d8af933a.47305","type":"change","z":"ded39865.f61418","name":"Set devid to fakeid2","rules":[{"t":"set","p":"dev_id","pt":"msg","to":"fakeid2","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":160,"y":760,"wires":[[]]},{"id":"208a6214.9b65ce","type":"change","z":"ded39865.f61418","name":"Set devid to fakeid1","rules":[{"t":"set","p":"devid","pt":"msg","to":"fakeid1","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":160,"y":820,"wires":[[]]},{"id":"ab3e3258.c3a65","type":"inject","z":"ded39865.f61418","name":"Sim uplink","topic":"","payload":"{\"boot\":78,\"error\":\"none\",\"p\":240.9199981689453,\"rh\":50,\"tDewC\":-48.35319137573242,\"tempC\":-24.8828125,\"vBat\":-0.5}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":80,"y":880,"wires":[["208a6214.9b65ce"]]},{"id":"57ded260.506d9c","type":"debug","z":"ded39865.f61418","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":540,"y":780,"wires":[]},{"id":"11c8126.f0564ee","type":"function","z":"ded39865.f61418","name":"Calculate z","func":"\n// Set initial values\np = msg.payload.p;\ntDewC = msg.payload.tDewC;\nt = msg.payload.tempC + 273.15;\n\n// Calculate actual vapor pressure\ne = 6.112*Math.pow(10,(7.5*tDewC)/(237.7+tDewC));\n\n// Calculate mixing ratio\nw = 0.62197 * ( e / (p-e));\n\n// Calculate Tv in kelvin\ntv2 = (1+(0.61*w))*t;\n\n// Check that the first observation exists\nif (context.get(msg.devid+'.z1')||0)\n{\n    // Get previous layers' values\n    p1 = context.get(msg.devid+'.p1');\n    tv1 = context.get(msg.devid+'.tv1');\n    z1 = context.get(msg.devid+'.z1');\n    \n    // Approximate average virtual temperature of layer\n    tv = tv1 + (tv2 - tv1)/2.0;\n\n    // Do thickness calculation\n    R = 287.058; // specific gas constant dry air\n    g = 9.80664; // gravitational acceleration\n    z2 = (R*tv/g)*Math.log(p1/p) + z1;\n    \n} else { // First field doesn't exist\n\n    z2 = 1.0 // 1 meter above the surface\n}\n\n// Store values for next iteration\ncontext.set(msg.devid+'.p1', p);\ncontext.set(msg.devid+'.tv1', tv2);\ncontext.set(msg.devid+'.z1', z2);\n\nmsg.payload.zElevation = z2;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":370,"y":780,"wires":[["57ded260.506d9c"]]},{"id":"86ebb79c.83ee78","type":"function","z":"ded39865.f61418","name":"Set flow.devid.boot","func":"flow.set(msg.devid+'.boot', msg.payload.boot);","outputs":1,"noerr":0,"x":550,"y":340,"wires":[[]]},{"id":"c7709154.22811","type":"function","z":"ded39865.f61418","name":"Check boot number","func":"boot = msg.payload.boot;\n\nif ((flow.get(msg.dev_id+'.boot') == boot) || 0) {\n    return [null, msg]; // Second output\n} \nelse {\n//else if ((flow.get(msg.dev_id+'.boot') < boot) || 0) {\n    // Set boot number for devid\n    flow.set(msg.dev_id+'.boot', boot);\n    // Reset the pressure\n    flow.set(msg.dev_id+'.pressure',999999); // high value\n    return [msg, null]; // First output\n} \n//else {\n//    flow.set(msg.dev_id+'.boot', boot);\n//}\n","outputs":2,"noerr":0,"x":120,"y":580,"wires":[["82199e12.48bae","e2c60710.5ed778"],["b4b67e10.292c8"]]},{"id":"b4b67e10.292c8","type":"function","z":"ded39865.f61418","name":"Stop if still ground pressure","func":"p = msg.payload.p;\nlastP = flow.get(msg.dev_id+'.pressure');\n\n// Prepare next iteration\nflow.set(msg.dev_id+'.pressure',p);\n\n// Check if pressure has changed one millibar from last obs\nif ( lastP || 0 ) {\n    if ( lastP - p > 0.5 ) {\n        // Device has launched\n        return msg;\n    } else {\n        return null; // Device is still on the ground\n    }\n} else {\n    // 1st clean observation on the ground\n    return msg;\n}\n","outputs":1,"noerr":0,"x":380,"y":580,"wires":[["ceb8d3a1.bd50a"]]},{"id":"ceb8d3a1.bd50a","type":"function","z":"ded39865.f61418","name":"Calculate z","func":"\n// Set initial values\np = msg.payload.p;\ntDewC = msg.payload.tDewC;\nt = msg.payload.tempC + 273.15;\n\n// Calculate actual vapor pressure\ne = 6.112*Math.pow(10,(7.5*tDewC)/(237.7+tDewC));\n\n// Calculate mixing ratio\nw = 0.62197 * ( e / (p-e));\n\n// Calculate Tv in kelvin\ntv2 = (1+(0.61*w))*t;\n\n// Check that the first observation exists\nif (context.get(msg.dev_id+'.z1')||0)\n{\n    // Get previous layers' values\n    p1 = context.get(msg.dev_id+'.p1');\n    tv1 = context.get(msg.dev_id+'.tv1');\n    z1 = context.get(msg.dev_id+'.z1');\n    \n    // Approximate average virtual temperature of layer\n    tv = tv1 + (tv2 - tv1)/2.0;\n\n    // Do thickness calculation\n    R = 287.058; // specific gas constant dry air\n    g = 9.80664; // gravitational acceleration\n    z2 = (R*tv/g)*Math.log(p1/p) + z1;\n    \n} else { // First field doesn't exist\n\n    z2 = 1.0 // 1 meter above the surface\n}\n\n// Store values for next iteration\ncontext.set(msg.dev_id+'.p1', p);\ncontext.set(msg.dev_id+'.tv1', tv2);\ncontext.set(msg.dev_id+'.z1', z2);\n\nmsg.payload.elevation_m = z2;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":370,"y":620,"wires":[["d2c0baf4.ad2838"]]},{"id":"333143b0.fe243c","type":"debug","z":"ded39865.f61418","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":570,"y":660,"wires":[]},{"id":"e2c60710.5ed778","type":"debug","z":"ded39865.f61418","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"\"Set new boot!!\"","targetType":"jsonata","x":300,"y":500,"wires":[]},{"id":"9aa76611.8df118","type":"debug","z":"ded39865.f61418","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":280,"y":460,"wires":[]},{"id":"19057ef0.4bc851","type":"ttn app","z":"","appId":"wxballoonsapp","accessKey":"ttn-account-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX","discovery":"discovery.thethingsnetwork.org:1900"}]